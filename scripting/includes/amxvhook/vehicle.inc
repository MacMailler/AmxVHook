#if defined __vehicle_inc__
  #endinput
#endif
#define __vehicle_inc__

native createVehicle(modelHash, coords[@Vector3], Float:heading);
native deleteVehicle(vehicle);

native isVehicleModel(vehicle, modelHash);
native isVehicleStopped(vehicle);
native isVehicleTaxiLightsOn(vehicle);
native isVehicleStuckOnRoof(vehicle);
native isVehicleStoppedAtTrafficLights(vehicle);
native isVehicleDriveable(vehicle, bool:isOnFireCheck);
native isVehicleWindowIntact(vehicle, windowIndex);
native isVehicleAnyWindowIntact(vehicle);
native isVehicleAnySeatsFree(vehicle);
native isVehicleHighDetail(vehicle);
native isVehicleAssetLoaded(vehicle);
native isVehicleInBurnout(vehicle);
native isVehicleSearchlightOn(vehicle);
native isVehicleModLoadDone(vehicle);
native isVehicleToggleModOn(vehicle, modType);
native isvehicleHeLeftadlightDamaged(vehicle);
native isvehicleRightHeadlightDamaged(vehicle);
native isVehicleEngineOn(vehicle);
native isVehicleVisible(vehicle);
native isVehicleShopResprayAllowed(vehicle);
native isVehiclePropellersUndamaged(vehicle);
native isVehicleStolen(vehicle);
native isVehicleHaveWeapons(vehicle);
native isVehicleNeonLightEnabled(vehicle, index);
native isVehicleOnAllWheels(vehicle);
native isVehicleAttachedToCargobob(cargobob, vehicleAttached);
native isVehicleBumperBrokenOff(vehicle, bool:front);
native isVehicleDoorDamaged(vehicle, doorId);
native isVehicleBig(vehicle);
native isVehicleHaveRoof(vehicle);
native isVehicleDoorFullyOpen(vehicle, doorIndex);
native isVehicleDamaged(vehicle);
native isVehicleModelAboat(modelHash);
native isVehicleModelASubmersible(modelHash);
native isVehicleModelAPlane(modelHash);
native isVehicleModelAHeli(modelHash);
native isVehicleModelACar(modelHash);
native isVehicleModelATrain(modelHash);
native isVehicleModelABike(modelHash);
native isVehicleModelABicycle(modelHash);
native isVehicleModelAQuadbike(modelHash);
native isVehicleAlarmActivated(vehicle);
native isVehicleTyresCanBurst(vehicle);
native isVehicleSeatFree(vehicle, seatIndex);
native isVehicleSirenOn(vehicle);
native isVehicleSirenSoundOn(vehicle);
native isVehicleBoatAnchor(vehicle);
native isVehiclePrimaryColorCustom(vehicle);
native isVehicleSecondaryColorCustom(vehicle);
native isVehicleInGarageArea(vehicle, const garageName[]);
native isVehicleDoorsLockedForPlayer(vehicle);
native isCargobobHookActive(cargobob);
native isCargobobMagnetActive(cargobob);
native isCopVehicleInArea3d(coords1[@Vector3], coords2[@Vector3]);
native isAnyVehicleNearPoint(point[@Vector3], Float:radius);
native isPreloadModsFinished(p0);

native setVehicleFixed(vehicle);
native setVehicleDeformationFixed(vehicle);
native setVehicleDamage(vehicle, offset[@Vector3], Float:damage, Float:radius, bool:p6);
native setVehicleBodyHealth(vehicle, Float:health);
native setVehicleEngineHealth(vehicle, Float:health);
native setVehiclePetrolTankHealth(vehicle, Float:health);
native setVehicleLivery(vehicle, liveryIndex);
native setVehicleIndicatorLights(vehicle, turnSignal, bool:toggle);
native setVehicleCanBreak(vehicle, bool:toggle);
native setVehicleBrakeLights(vehicle, bool:toggle);
native setVehicleHandbrake(vehicle, bool:toggle);
native setVehicleResistantToExp(vehicle, bool:toggle);
native setVehicleBurnout(vehicle, bool:toggle);
native setVehicleRudderBroken(vehicle, bool:toggle);
native setVehicleSearchlight(vehicle, bool:toggle, bool:canBeUsedByAI);
native setVehicleModKit(vehicle, modKit);
native setVehicleWheelType(vehicle, WheelType);
native setVehicleModColor(vehicle, colorIndex, paintType, color);
native setVehicleMod(vehicle, modType, modIndex, bool:customTires);
native setVehicleTyreSmokeColor(vehicle, color);
native setVehicleNeonLightsColor(vehicle, color);
native setVehicleWindowTint(vehicle, tint);
native setVehicleEnginePowerMult(vehicle, Float:value); 
native setVehicleEngineTorqueMult(vehicle, Float:value); 
native setVehicleIsWanted(vehicle, bool:toggle); 
native setVehicleShootAtTarget(vehicle, entity, target[@Vector3]);
native setVehicleLodMult(vehicle, Float:mult);
native setVehicleLightMult(vehicle, Float:mult);
native setVehicleLights(vehicle, _state);
native setVehicleLightsMode(vehicle, mode);
native setVehicleStrong(vehicle, bool:toggle);
native setVehicleSiren(vehicle, bool:toggle);
native setVehicleBoatAnchor(vehicle, bool:toggle);
native setVehicleForceHd(vehicle, bool:toggle);
native setVehicleGravity(vehicle, bool:toggle);
native setVehicleInteriorLight(vehicle, bool:toggle);
native setVehicleEngineCanDegrade(vehicle, bool:toggle);
native setVehicleStolen(vehicle, bool:stolen);
native setVehicleJetEngineOn(vehicle, bool:toggle);
native setVehicleAlarm(vehicle, bool:toggle);
native setVehicleCanBeUsedFleeingPeds(vehicle, bool:toggle);
native setVehicleNeonLightEnabled(vehicle, index, bool:toggle);
native setVehicleColorCombination(vehicle, colorCombination);
native setVehicleExtraColors(vehicle, pearlescentColor, wheelColor);
native setVehicleDoorCanBreak(vehicle, doorIndex, bool:isBreakable);
native setVehicleDoorShut(vehicle, doorIndex, bool:closeInstantly);
native setVehicleDoorBroken(vehicle, doorIndex, bool:deleteDoor);
native setVehicleDoorLatched(vehicle, doorIndex, bool:forceClose, bool:lock, bool:p4);
native setVehicleDoorControl(vehicle, doorIndex, speed, Float:angle);
native setVehicleDoorOpen(vehicle, doorIndex, bool:loose, bool:openInstantly);
native setVehicleDoorsShut(vehicle, bool:closeInstantly);
native setVehicleWheelsCanBreak(vehicle, bool:toggle);
native setVehicleTyresCanBurst(vehicle, bool:toggle);
native setVehicleTyreBurst(vehicle, index, bool:onRim, Float:p3);
native setVehicleUndriveable(vehicle, bool:toggle);
native setVehicleProvidesCover(vehicle, doorLockStatus);
native setVehicleDoorsLockedForPlayer(vehicle, bool:toggle);
native setVehicleEngineOn(vehicle, bool:value, bool:instantly, bool:otherwise);
native setVehicleDirtLevel(vehicle, Float:level);
native setVehicleCanBeVisiblyDamaged(vehicle, bool:toggle);
native setVehicleCanBeTargetted(vehicle, bool:toggle);
native setVehicleModelSuppressed(modelHash, bool:suppressed);
native setVehicleNumberPlateText(vehicle, const text[]);
native setVehicleNumberPlateTextIndex(vehicle, plateIndex);
native setVehicleTyreFixed(vehicle, tyreIndex);
native setVehicleForwardSpeed(vehicle, Float:speed);
native setVehicleHalt(vehicle, Float:dist, killEngine, bool:unknown);
native setVehicleCustomPrimaryColor(vehicle, color);
native setVehicleCustomSecondaryColor(vehicle, color);
native setBikeLeanAngle(vehicle, Float:x, Float:y); 
native setPlaneMinHeightAboveTerrain(vehicle, Float:height); 
native setCargobobHookPos(cargobob, Float:xOffset, Float:yOffset, _state);
native setCargobobPickupMagnetActive(cargobob, bool:active);
native setCargobobPickupMagnetStrength(cargobob, Float:strength);
native setHeliBladesSpeed(vehicle, Float:speed);
native setVehicleColor(vehicle, color1, color2);
native setVehicleDoorsLocked(vehicle, bool:locked);
native setVehicleTaxiLights(vehicle, bool:toggle);

native getClosestVehicle(coords[@Vector3], Float:radius, modelHash, flags);
native getRandomVehicleInSphere(coords[@Vector3], Float:radius, modelHash, flags);
native getVehiclePedInSeat(vehicle, seatIndex);
native getVehicleLastPedInSeat(vehicle, seatIndex);
native getVehicleLightsState(vehicle, &bool:lightsOn, &bool:highbeamsOn);
native getVehicleNumberPlates(vehicle);
native getVehicleNumberPlateText(vehicle, dest[], len = sizeof dest);
native getVehicleClass(vehicle);
native getVehicleClassFromModel(modelHash);
native getVehicleMod(vehicle, modType);
native getVehicleModVariation(vehicle, modType);
native getVehicleNumMods(vehicle, modType);
native getVehicleModKit(vehicle);
native getVehicleModKitType(vehicle);
native getVehicleNumModKits(vehicle);
native getVehicleNumModColors(p0, bool:p1);
native getVehicleModColor(vehicle, colorIndex, &paintType, &color, &pearlescentColor);
native getVehicleModColorName(vehicle, colorId, dest[], len = sizeof dest);
native getVehicleModTextLabel(vehicle, modType, modValue, dest[], len = sizeof dest);
native getVehicleModData(vehicle, modType, modIndex);
native getVehicleLiveryName(vehicle, liveryIndex, dest[], len = sizeof dest);
native getVehicleWheelType(vehicle);
native getVehicleLivery(vehicle);
native getVehicleLiveryCount(vehicle);
native getVehicleTrailer(vehicle, &trailer);
native getVehicleTyreSmokeColor(vehicle);
native getVehicleWindowTint(vehicle);
native getVehicleNumWindowTints();
native getVehicleColor(vehicle);
native getVehicleColors(vehicle, &primary, &secondary);
native getVehicleNeonLightsColor(vehicle);
native getVehicleCauseOfDestruction(vehicle);
native getVehicleOwner(vehicle, &entity);
native getVehiclePlateType(vehicle);
native getVehicleColorCombination(vehicle);
native getVehicleNumberColors(vehicle);
native getVehicleExtraColors(vehicle, &pearlescentColor, &wheelColor);
native getVehicleDoorLockStatus(vehicle);
native getVehiclePedUsingDoor(vehicle, doorIndex);
native getVehicleNumberPlateTextIndex(vehicle);
native getVehicleAttachedToCargobob(cargobob);
native getVehicleAttachedToEntity(entity);
native getVehicleCustomPrimaryColor(vehicle);
native getVehicleCustomSecondaryColor(vehicle);
native getVehiclePassengers(vehicle);
native getVehicleMaxPassengers(vehicle);
native getVehicleModelNumberOfSeats(modelHash);
native getDisplayNameFromVehicleModel(modelHash, dest[], len = sizeof dest);
native Float:getVehicleBodyHealth(vehicle);
native Float:getVehicleEngineHealth(vehicle);
native Float:getVehiclePetrolTankHealth(vehicle);
native Float:getVehicleMaxSpeed(vehicle);
native Float:getVehicleMaxBraking(vehicle);
native Float:getVehicleMaxTraction(vehicle);
native Float:getVehicleAcceleration(vehicle);
native Float:getVehicleModelMaxSpeed(modelHash);
native Float:getVehicleModelMaxBraking(modelHash);
native Float:getVehicleModelMaxTraction(modelHash);
native Float:getVehicleModelMaxKnots(modelHash);
native Float:getVehicleModelAcceleration(modelHash);
native Float:getVehicleModelHandBrake(modelHash);
native Float:getVehicleModelDownForce(modelHash);
native Float:getVehicleModelMoveResistance(modelHash);
native Float:getVehicleClassMaxSpeed(vehicleClass);
native Float:getVehicleClassMaxTraction(vehicleClass);
native Float:getVehicleClassMaxBraking(vehicleClass);
native Float:getVehicleClassMaxAgility(vehicleClass);
native Float:getVehicleClassMaxAcceleration(vehicleClass);
native Float:getVehicleModModifierValue(vehicle, modType, modIndex);
native Float:getVehicleDoorAngleRatio(vehicle, door);
native Float:getVehicleDirtLevel(vehicle);

native removeVehicleMod(vehicle, modType);
native resetVehicleWheels(vehicle, bool:toggle);
native requestVehicleHighDetailModel(vehicle);
native removeVehicleHighDetailModel(vehicle);
native requestVehicleAsset(vehicleHash, vehicleAsset);
native removeVehicleAsset(vehicleAsset);

native rollUpWindow(vehicle, index);
native rollDownWindow(vehicle, index);
native rollDownWindows(vehicle);
native smashVehicleWindow(vehicle, index);
native fixVehicleWindow(vehicle, index);
native removeVehicleWindow(vehicle, index);

native releasePreloadMods(vehicle);
native reloadVehicleMod(p0, modType, p2);
native toggleVehicleMod(vehicle, modType, bool:toggle);
native clearVehicleCustomPrimaryColor(vehicle);
native clearVehicleCustomSecondColor(vehicle);
native enableCargobobHook(cargobob, _state);
native retractCargobobHook(cargobob);
native attachVehicleToCargobob(vehicle, cargobob, p2, coords[@Vector3]);
native detachVehicleFromCargobob(vehicle, cargobob);
native detachVehicleFromAnyCargobob(vehicle);
native requestVehicleScaleformMovie(vehicle);
native startVehicleAlarm(vehicle);
native explodeVehicle(vehicle, bool:isAudible,  bool:isInvisible);